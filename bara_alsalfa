import 'package:flutter/material.dart';
import 'package:scratcher/scratcher.dart';

void main() {
  runApp(MyApp());
}

class Player {
  final String name;
  final IconData icon;

  Player({required this.name, required this.icon});
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomePage(),
    );
  }
}

class HomePage extends StatelessWidget {
  final categories = [
    "Animals",
    "Clothes",
    "Celebrities",
    "Countries",
    "Players"
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Game')),
      body: GridView.builder(
        itemCount: categories.length,
        gridDelegate:
            const SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount: 2),
        itemBuilder: (context, index) {
          return ElevatedButton(
            onPressed: () {
              Navigator.push(
                context,
                MaterialPageRoute(builder: (context) => const CategoryPage()),
              );
            },
            child: Text(categories[index]),
          );
        },
      ),
    );
  }
}

class CategoryPage extends StatefulWidget {
  const CategoryPage({Key? key}) : super(key: key);

  @override
  _CategoryPageState createState() => _CategoryPageState();
}

class _CategoryPageState extends State<CategoryPage> {
  List<Player> players = [];
  IconData selectedIcon = Icons.person; // Default icon

  Future<void> _addPlayer() async {
    String playerName = '';
    int selectedIconIndex = 0;
    List<IconData> icons = [Icons.person, Icons.star, Icons.ac_unit];

    await showDialog(
      context: context,
      builder: (BuildContext context) {
        return AlertDialog(
          title: Text('Choose an icon and enter the player name'),
          content: StatefulBuilder(
            builder: (BuildContext context, StateSetter setState) {
              return Column(
                children: [
                  TextField(
                    onChanged: (value) {
                      playerName = value;
                    },
                    decoration: InputDecoration(labelText: 'Player Name'),
                  ),
                  Wrap(
                    children: List.generate(icons.length, (index) {
                      return IconButton(
                        icon: Icon(icons[index]),
                        onPressed: () {
                          setState(() {
                            selectedIconIndex = index;
                          });
                        },
                        color: selectedIconIndex == index ? Colors.blue : null,
                      );
                    }),
                  ),
                ],
              );
            },
          ),
          actions: <Widget>[
            TextButton(
              child: Text('Cancel'),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
            TextButton(
              child: Text('OK'),
              onPressed: () {
                Navigator.of(context).pop(Player(
                  name: playerName,
                  icon: icons[selectedIconIndex],
                ));
              },
            ),
          ],
        );
      },
    ).then((newPlayer) {
      if (newPlayer != null) {
        setState(() {
          players.add(newPlayer as Player);
        });
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Category')),
      body: Column(
        children: <Widget>[
          Expanded(
            child: ListView.builder(
              itemCount: players.length,
              itemBuilder: (context, index) {
                return ListTile(
                  leading: Icon(
                    Icons.person_outline,
                    size: 50,
                  ),
                  title: Text(players[index].name),
                );
              },
            ),
          ),
          ElevatedButton(
            onPressed: _addPlayer,
            child: const Text('Add Player'),
          ),
          if (players.length >= 3)
            ElevatedButton(
              onPressed: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) =>
                        GamePage(players: players, currentPlayerIndex: 0),
                  ),
                );
              },
              child: const Text('Start Game'),
            ),
        ],
      ),
    );
  }
}

class GamePage extends StatelessWidget {
  final List<Player> players;
  final int currentPlayerIndex;

  const GamePage(
      {super.key, required this.players, required this.currentPlayerIndex});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Game Page'),
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Text('Player Name: ${players[currentPlayerIndex].name}'),
          Text('Give ${players[currentPlayerIndex].name} the phone'),
          ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color.fromARGB(255, 94, 244, 206),
            ),
            onPressed: () {
              if (currentPlayerIndex + 1 < players.length) {
                // Navigate to the turn page
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(
                    builder: (context) => TurnPage(
                      players: players,
                      currentPlayerIndex: currentPlayerIndex + 1,
                    ),
                  ),
                );
              } else {
                // Navigate to the last page
                Navigator.pushReplacement(
                  context,
                  MaterialPageRoute(
                    builder: (context) => const LastPage(),
                  ),
                );
              }
            },
            child: const Text('Next'),
          ),
        ],
      ),
    );
  }
}

class TurnPage extends StatelessWidget {
  final List<Player> players;
  final int currentPlayerIndex;

  const TurnPage(
      {super.key, required this.players, required this.currentPlayerIndex});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Turn Page'),
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Scratcher(
            brushSize: 40,
            threshold: 50,
            color: Colors.grey,
            onChange: (value) {
              print("Scratch progress: $value%");
            },
            child: Container(
              alignment: Alignment.center,
              height: 300,
              width: 300,
              child: const Text('انت جوا السالفة',
                  style: TextStyle(fontWeight: FontWeight.bold)),
            ),
          ),
          ElevatedButton(
            style: ElevatedButton.styleFrom(
                backgroundColor: const Color.fromARGB(255, 200, 235, 151)),
            onPressed: () {
              // Navigate to the next game page
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(
                  builder: (context) => GamePage(
                    players: players,
                    currentPlayerIndex: currentPlayerIndex,
                  ),
                ),
              );
            },
            child: const Text('Next'),
          ),
        ],
      ),
    );
  }
}

class LastPage extends StatelessWidget {
  const LastPage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Turn page'),
      ),
      body: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Scratcher(
            brushSize: 40,
            threshold: 50,
            color: Colors.red,
            onChange: (value) {
              print("Scratch progress: $value%");
            },
            child: Container(
              alignment: Alignment.center,
              height: 300,
              width: 300,
              child: const Text('أنت برا السالفة',
                  style: TextStyle(fontWeight: FontWeight.bold)),
            ),
          ),
          ElevatedButton(
            style: ElevatedButton.styleFrom(
              backgroundColor: const Color.fromARGB(255, 250, 0, 0),
            ),
            onPressed: () {
              // Navigate back to the category page
              Navigator.pushReplacement(
                context,
                MaterialPageRoute(
                  builder: (context) => const CategoryPage(),
                ),
              );
            },
            child: const Text('Exit'),
          ),
        ],
      ),
    );
  }
}
